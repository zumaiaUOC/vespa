)
# Limpiamos el workspace, por si hubiera algun dataset o informacion cargada
rm(list = ls())
# Limpiamos la consola
cat("\014")
# source("loadPackages.R")
packages <- c("ggplot2","ggpubr","readr","plotly","tidyverse","lubridate",
"magrittr","funModeling","skimr", "rgdal", "zoo", "streamgraph")
new <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new)) install.packages(new)
a=lapply(packages, require, character.only=TRUE)
seasons_impute <- read.csv('../Work/seasons_impute.csv', sep = ',', header = TRUE)
waspbusters <- read.csv('../Work/WaspBusters_20210504_LARVAE.csv', sep = ',', header = TRUE)
wb_geo <- read.csv('../Work/WBds01_GEO.csv', sep = ',', header = FALSE,
skip =0)
wb_meteo <- read.csv('../Work/WBds02_METEO.csv', sep = ',', header = TRUE)
wb_queen_wasp <- read.csv('../Work/WBds03_all_the_queens_wasps.csv', sep = ',')
estaciones <- read.csv('../data/estaciones.csv', sep = ',')
fruta <- read.csv('../data/fruta.csv', sep = ',')
met <- read.csv('../data/met.csv', sep = ',')
nido <- read.csv('../data/nido.csv', sep = ',')%>%
dplyr::select(1,4,6,7,8,9,0,11,12,13,14,16,19)
loc_estaciones <- read.csv('../Input_open_data/ds05_LOCALIZACION-ESTACIONES-METEOROLOGICAS.csv', sep = ';')
loc_estaciones1 <- loc_estaciones[complete.cases(loc_estaciones),]
loc_estaciones2 <- data.frame(x=loc_estaciones1$YUTM,y=loc_estaciones1$XUTM)
coordinates(loc_estaciones2) <- ~x+y
class(loc_estaciones2)
proj4string(loc_estaciones2) <- CRS("+proj=utm +zone=31+datum=WGS84 +units=m +ellps=WGS84")
loc_estaciones3 <- spTransform(loc_estaciones2,CRS("+proj=longlat +datum=WGS84"))
df_loc_est <- as.data.frame(loc_estaciones3)
data_loc_est <- cbind(loc_estaciones,df_loc_est)
data_loc_est$latitude <- data_loc_est$x+4.219
data_loc_est$longitude <- data_loc_est$y-6.62
# Seleccionamos los datos que nos interesas
data_loc_est <- data_loc_est %>%
select(1,2,3,6,9,10)
library(leaflet)
# Create a color palette with handmade bins.
mybins <- seq(4, 6.5, by=0.5)
mypalette <- colorBin( palette="YlOrBr",
domain=data_loc_est$cota..m.,
na.color="transparent",
bins=mybins)
# Prepare the text for the tooltip:
mytext <- paste(
"Codigo: ", data_loc_est$CODIGO, "<br/>",
"Estacion: ", data_loc_est$ESTACION, "<br/>",
"Tipo: ", data_loc_est$TIPO, "<br/>",
"Cota: ", data_loc_est$cota..m., "<br/>",
"Longitud: ", data_loc_est$longitude, "<br/>",
"Latitud: ", data_loc_est$latitude, "<br/>") %>%
lapply(htmltools::HTML)
# Final Map
leaflet(data_loc_est) %>%
addTiles() %>%
addMarkers(popup = paste0(
"<b>Estaci칩n: </b>"
, data_loc_est$ESTACION
, "<br>"
, "<b>Cota: </b>"
, data_loc_est$cota..m.
, "<br>"
, "<b>Tipo: </b>"
, data_loc_est$TIPO
, "<br>"
, data_loc_est$latitude
, data_loc_est$longitude
), clusterOptions = markerClusterOptions())%>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addMiniMap(
tiles = providers$Esri.WorldStreetMap,
toggleDisplay = TRUE)
colnames(nido)<-c("id","fecha","usuario", "municipio", "direccion", "especie","altura","diametro","longitude","latitude","estado","agente")
nido$fecha <- as.Date(nido$fecha)
nido$longitude <- gsub(",",".",nido$longitude)
nido$longitude <- as.integer(nido$longitude)
nido$latitude <- gsub(",",".",nido$latitude)
nido$latitude <- as.integer(nido$latitude)
# library(rgdal)
nido <- nido[complete.cases(nido),]
nido1 <- data.frame(x=nido$latitude,y=nido$longitude)
coordinates(nido1) <- ~x+y
class(nido1)
proj4string(nido1) <- CRS("+proj=utm +zone=31+datum=WGS84 +units=m +ellps=WGS84")
nido2 <- spTransform(nido1,CRS("+proj=longlat +datum=WGS84"))
DF <- as.data.frame(nido2)
data_nido <- cbind(nido,DF)
data_nido$latitude <- data_nido$x+4.219
data_nido$longitude <- data_nido$y-6.62
data_nido[, "a침o"] <- as.numeric(format(data_nido[,"fecha"], "%Y"))
data_nido[, "mes"] <- as.numeric(format(data_nido[,"fecha"], "%m"))
mymonths <- c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")
#add abbreviated month name
data_nido <- transform(data_nido, mes = month.abb[mes])
head(data_nido)
write.csv(data_nido,'data/data_nido.csv', row.names = FALSE)
library(ggpmisc)
nidos_fechas <- data_nido%>%
select(fecha,especie)%>%
group_by(fecha,especie)%>%
mutate(num_nidos = n())%>%
arrange(fecha)
nidos_fechas <- nidos_fechas[!duplicated(nidos_fechas), ]
ggplotly(ggplot(data = nidos_fechas, aes(x = fecha, y = num_nidos, color = especie)) +
geom_point() +
geom_smooth(method=lm) +
labs(x = "Fecha", y= "Numero de nidos",colour = "Especie",title = "Tendencia nidos/colmenas por expecie") +
theme_bw())
library(ggvis)
data_nido%>%
ggvis(~altura, ~diametro, fill = ~mes, opacity := 0.3 ) %>%
layer_points() %>%
layer_smooths() %>%
layer_smooths(span = 0.3, stroke := "red") %>%
layer_model_predictions(model = "lm", stroke := "green")
nidos_municipio <- data_nido%>%
select(fecha, municipio)%>%
group_by(month=floor_date(fecha, "month"),municipio) %>%
mutate(num_nidos = n())%>%
arrange(month)
nidos_municipio <- nidos_municipio[!duplicated(nidos_municipio), ]
ggplotly(ggplot(data = nidos_municipio, aes(x = fecha, y = num_nidos, color = municipio)) +
geom_line() +
labs(x = "Fecha", y= "Numero de nidos",colour = "Municipios",title = "Numero de nidos por fecha y poblaci칩n") +
theme_bw())
library(leaflet)
# Create a color palette with handmade bins.
mybins <- seq(4, 6.5, by=0.5)
mypalette <- colorBin( palette="YlOrBr",
domain=data_nido$diametro,
na.color="transparent",
bins=mybins)
# Prepare the text for the tooltip:
mytext <- paste(
"Fecha: ", data_nido$fecha, "<br/>",
"Especie: ", data_nido$especie, "<br/>",
"Altura: ", data_nido$altura, "<br/>",
"Diametro: ", data_nido$diametro, "<br/>",
"Estado: ", data_nido$estado, "<br/>",
"Agente: ", data_nido$agente, "<br/>",
"Municipio: ", data_nido$municipio, sep="") %>%
lapply(htmltools::HTML)
# Final Map
m <- leaflet(data_nido) %>%
addTiles()  %>%
setView( lat=43,26271, lng = -2.9334110 , zoom=10) %>%
addProviderTiles("Esri.WorldImagery") %>%
addCircleMarkers(~longitude, ~latitude,
fillColor = ~mypalette(diametro), fillOpacity = 0.7, color="white", radius=8, stroke=FALSE,
label = mytext,
labelOptions = labelOptions( style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
leaflet::addLegend( pal =mypalette, values =~diametro,
opacity=0.9, title = "Diametros",
position = "bottomright" )
m
by_cod <- fruta %>% group_by(CODIGO.MUNICIPIO)%>% distinct()
head(by_cod)
by_cod_list <- fruta %>% group_by(CODIGO.MUNICIPIO)%>% distinct() %>%
summarise(alltypes = paste(PRODUCTODES_C, collapse=", ") )
head(by_cod)
plot(by_cod)
ggplot(by_cod, aes(PRODUCTORES_C)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
# Indicamos que todos los chunk se oculten
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
# Limpiamos el workspace, por si hubiera algun dataset o informacion cargada
rm(list = ls())
# Limpiamos la consola
cat("\014")
# source("loadPackages.R")
packages <- c("ggplot2","ggpubr","readr","plotly","tidyverse","lubridate",
"magrittr","funModeling","skimr", "rgdal", "zoo", "streamgraph")
new <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new)) install.packages(new)
a=lapply(packages, require, character.only=TRUE)
seasons_impute <- read.csv('../Work/seasons_impute.csv', sep = ',', header = TRUE)
waspbusters <- read.csv('../Work/WaspBusters_20210504_LARVAE.csv', sep = ',', header = TRUE)
wb_geo <- read.csv('../Work/WBds01_GEO.csv', sep = ',', header = FALSE,
skip =0)
wb_meteo <- read.csv('../Work/WBds02_METEO.csv', sep = ',', header = TRUE)
wb_queen_wasp <- read.csv('../Work/WBds03_all_the_queens_wasps.csv', sep = ',')
estaciones <- read.csv('../data/estaciones.csv', sep = ',')
fruta <- read.csv('../data/fruta.csv', sep = ',')
met <- read.csv('../data/met.csv', sep = ',')
nido <- read.csv('../data/nido.csv', sep = ',')%>%
dplyr::select(1,4,6,7,8,9,0,11,12,13,14,16,19)
loc_estaciones <- read.csv('../Input_open_data/ds05_LOCALIZACION-ESTACIONES-METEOROLOGICAS.csv', sep = ';')
loc_estaciones1 <- loc_estaciones[complete.cases(loc_estaciones),]
loc_estaciones2 <- data.frame(x=loc_estaciones1$YUTM,y=loc_estaciones1$XUTM)
coordinates(loc_estaciones2) <- ~x+y
class(loc_estaciones2)
proj4string(loc_estaciones2) <- CRS("+proj=utm +zone=31+datum=WGS84 +units=m +ellps=WGS84")
loc_estaciones3 <- spTransform(loc_estaciones2,CRS("+proj=longlat +datum=WGS84"))
df_loc_est <- as.data.frame(loc_estaciones3)
data_loc_est <- cbind(loc_estaciones,df_loc_est)
data_loc_est$latitude <- data_loc_est$x+4.219
data_loc_est$longitude <- data_loc_est$y-6.62
# Seleccionamos los datos que nos interesas
data_loc_est <- data_loc_est %>%
select(1,2,3,6,9,10)
library(leaflet)
# Create a color palette with handmade bins.
mybins <- seq(4, 6.5, by=0.5)
mypalette <- colorBin( palette="YlOrBr",
domain=data_loc_est$cota..m.,
na.color="transparent",
bins=mybins)
# Prepare the text for the tooltip:
mytext <- paste(
"Codigo: ", data_loc_est$CODIGO, "<br/>",
"Estacion: ", data_loc_est$ESTACION, "<br/>",
"Tipo: ", data_loc_est$TIPO, "<br/>",
"Cota: ", data_loc_est$cota..m., "<br/>",
"Longitud: ", data_loc_est$longitude, "<br/>",
"Latitud: ", data_loc_est$latitude, "<br/>") %>%
lapply(htmltools::HTML)
# Final Map
leaflet(data_loc_est) %>%
addTiles() %>%
addMarkers(popup = paste0(
"<b>Estaci칩n: </b>"
, data_loc_est$ESTACION
, "<br>"
, "<b>Cota: </b>"
, data_loc_est$cota..m.
, "<br>"
, "<b>Tipo: </b>"
, data_loc_est$TIPO
, "<br>"
, data_loc_est$latitude
, data_loc_est$longitude
), clusterOptions = markerClusterOptions())%>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addMiniMap(
tiles = providers$Esri.WorldStreetMap,
toggleDisplay = TRUE)
colnames(nido)<-c("id","fecha","usuario", "municipio", "direccion", "especie","altura","diametro","longitude","latitude","estado","agente")
nido$fecha <- as.Date(nido$fecha)
nido$longitude <- gsub(",",".",nido$longitude)
nido$longitude <- as.integer(nido$longitude)
nido$latitude <- gsub(",",".",nido$latitude)
nido$latitude <- as.integer(nido$latitude)
# library(rgdal)
nido <- nido[complete.cases(nido),]
nido1 <- data.frame(x=nido$latitude,y=nido$longitude)
coordinates(nido1) <- ~x+y
class(nido1)
proj4string(nido1) <- CRS("+proj=utm +zone=31+datum=WGS84 +units=m +ellps=WGS84")
nido2 <- spTransform(nido1,CRS("+proj=longlat +datum=WGS84"))
DF <- as.data.frame(nido2)
data_nido <- cbind(nido,DF)
data_nido$latitude <- data_nido$x+4.219
data_nido$longitude <- data_nido$y-6.62
data_nido[, "a침o"] <- as.numeric(format(data_nido[,"fecha"], "%Y"))
data_nido[, "mes"] <- as.numeric(format(data_nido[,"fecha"], "%m"))
mymonths <- c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")
#add abbreviated month name
data_nido <- transform(data_nido, mes = month.abb[mes])
head(data_nido)
write.csv(data_nido,'data/data_nido.csv', row.names = FALSE)
library(ggpmisc)
nidos_fechas <- data_nido%>%
select(fecha,especie)%>%
group_by(fecha,especie)%>%
mutate(num_nidos = n())%>%
arrange(fecha)
nidos_fechas <- nidos_fechas[!duplicated(nidos_fechas), ]
ggplotly(ggplot(data = nidos_fechas, aes(x = fecha, y = num_nidos, color = especie)) +
geom_point() +
geom_smooth(method=lm) +
labs(x = "Fecha", y= "Numero de nidos",colour = "Especie",title = "Tendencia nidos/colmenas por expecie") +
theme_bw())
library(ggvis)
data_nido%>%
ggvis(~altura, ~diametro, fill = ~mes, opacity := 0.3 ) %>%
layer_points() %>%
layer_smooths() %>%
layer_smooths(span = 0.3, stroke := "red") %>%
layer_model_predictions(model = "lm", stroke := "green")
nidos_municipio <- data_nido%>%
select(fecha, municipio)%>%
group_by(month=floor_date(fecha, "month"),municipio) %>%
mutate(num_nidos = n())%>%
arrange(month)
nidos_municipio <- nidos_municipio[!duplicated(nidos_municipio), ]
ggplotly(ggplot(data = nidos_municipio, aes(x = fecha, y = num_nidos, color = municipio)) +
geom_line() +
labs(x = "Fecha", y= "Numero de nidos",colour = "Municipios",title = "Numero de nidos por fecha y poblaci칩n") +
theme_bw())
library(leaflet)
# Create a color palette with handmade bins.
mybins <- seq(4, 6.5, by=0.5)
mypalette <- colorBin( palette="YlOrBr",
domain=data_nido$diametro,
na.color="transparent",
bins=mybins)
# Prepare the text for the tooltip:
mytext <- paste(
"Fecha: ", data_nido$fecha, "<br/>",
"Especie: ", data_nido$especie, "<br/>",
"Altura: ", data_nido$altura, "<br/>",
"Diametro: ", data_nido$diametro, "<br/>",
"Estado: ", data_nido$estado, "<br/>",
"Agente: ", data_nido$agente, "<br/>",
"Municipio: ", data_nido$municipio, sep="") %>%
lapply(htmltools::HTML)
# Final Map
m <- leaflet(data_nido) %>%
addTiles()  %>%
setView( lat=43,26271, lng = -2.9334110 , zoom=10) %>%
addProviderTiles("Esri.WorldImagery") %>%
addCircleMarkers(~longitude, ~latitude,
fillColor = ~mypalette(diametro), fillOpacity = 0.7, color="white", radius=8, stroke=FALSE,
label = mytext,
labelOptions = labelOptions( style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
leaflet::addLegend( pal =mypalette, values =~diametro,
opacity=0.9, title = "Diametros",
position = "bottomright" )
m
by_cod <- fruta %>% group_by(CODIGO.MUNICIPIO)%>% distinct()
head(by_cod)
by_cod_list <- fruta %>% group_by(CODIGO.MUNICIPIO)%>% distinct() %>%
summarise(alltypes = paste(PRODUCTODES_C, collapse=", ") )
head(by_cod)
plot(by_cod)
ggplot(by_cod, aes(PRODUCTODES_C)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
ggplot(by_cod, aes(PRODUCTODES_C, fill=NOMBRE.LOCALIDAD)) +
geom_bar(fill = "#0073C2FF") +
labs(x = "Tipo de Arbol", y= "Numero de municipios",colour = "Municipios",title = "Numero de municipios por tipo de arbol") +
theme_pubclean()
ggplotly(ggplot(by_cod, aes(PRODUCTODES_C, fill=NOMBRE.LOCALIDAD)) +
geom_bar(fill = "#0073C2FF") +
labs(x = "Tipo de Arbol", y= "Numero de municipios",colour = "Municipios",title = "Numero de municipios por tipo de arbol") +
theme_pubclean())
ggplot(aes(x = 'mes', y = 'id', fill = 'especie'),
species_month_df) + geom_bar(stat='identity', position='fill')
ggplot(aes(x = 'mes', y = 'id', fill = 'especie'),
data_nido) + geom_bar(stat='identity', position='fill')
ggplot(data = data_nido, aes(x = 'mes', y = 'id', fill = 'especie')) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('year_x')) +
xlab("month") + ylab("% Reported Amount of Nests") + ggtitle("Observed species by month and year")
ggplot(data = data_nido, aes(x = 'mes', y = 'id', fill = 'especie')) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('a침o')) +
xlab("mes") + ylab("% Reported Amount of Nests") + ggtitle("Observed species by month and year")
+ scale_fill_brewer(type='seq', palette='YlOrBr')
ggplot(data = data_nido, aes(x = mes, y = id, fill = 'especie')) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('a침o')) +
xlab("mes") + ylab("% Reported Amount of Nests") + ggtitle("Observed species by month and year")
+ scale_fill_brewer(type='seq', palette='YlOrBr')
ggplot(data = data_nido, aes(x = mes, y = id, fill = especie)) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('a침o')) +
xlab("mes") + ylab("% Reported Amount of Nests") + ggtitle("Observed species by month and year")
+ scale_fill_brewer(type='seq', palette='YlOrBr')
ggplot(data = data_nido, aes(x = mes, y = id, fill = especie)) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('a침o')) +
xlab("mes") + ylab("% Cantidad de nidos declarados") + ggtitle("Especies observadas por mes y a침o")
+ scale_fill_brewer(type='seq', palette='YlOrBr')
ggplot(data = data_nido, aes(x = mes, y = id, fill = especie)) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('a침o')) +
xlab("mes") + ylab("% Cantidad de nidos declarados") +
ggtitle("Especies observadas por mes y a침o") +
scale_fill_brewer(type='seq', palette='YlOrBr')
ggplotly(ggplot(data = data_nido, aes(x = mes, y = id, fill = especie)) +
geom_bar(stat='identity', position='fill') +
facet_wrap(('a침o')) +
xlab("mes") + ylab("% Cantidad de nidos declarados") +
ggtitle("Especies observadas por mes y a침o") +
scale_fill_brewer(type='seq', palette='YlOrBr'))
ggplot(data = data_nido, aes(x='municipio', y='especie')) +
geom_bar(stat='identity') +
facet_wrap('year_x') +
coord_flip() +
theme(figure_size=(10, 24))
ggplot(data = data_nido, aes(x='municipio', y='especie')) +
geom_bar(stat='identity') +
facet_wrap('year_x') +
coord_flip()
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap(a침o) +
coord_flip() +
theme(figure_size=(10, 24))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap(a침o) +
coord_flip() + theme())
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap(a침o) +
coord_flip() + theme()
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + theme()
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
labs(x = "Especie ", y = "Municipio  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
labs(x = "MUNICIPIO ", y = "ESPACIE  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size=13,color="darkred")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=3,color="darkred")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y =  = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y = element_text(hjust = 1, size=7,color="darkblue")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")+
theme(axis.title.y = element_text(size = rel(1.8)))
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y = element_text(hjust = 1, size=7,color="darkblue")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")
ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y = element_text(hjust = 1, size=3,color="darkblue")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  ")
ggplotly(ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y = element_text(hjust = 1, size=3,color="darkblue")) +
labs(x = "MUNICIPIO ", y = "ESPACIE  "))
ggplotly(ggplot(data = data_nido, aes(x=municipio, y=especie)) +
geom_bar(stat='identity') +
facet_wrap("a침o") +
coord_flip() + coord_flip()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=7,color="darkred")) +
theme(axis.text.y = element_text(hjust = 1, size=3, color="darkblue")) +
ggtitle("Nidos por mes y por a침o") +
labs(x = "MUNICIPIO ", y = "ESPACIE  "))
